{
  "openapi": "3.1.0",
  "info": {
    "title": "Wallet API",
    "version": "0.3.0"
  },
  "servers": [
    {
      "url": "https://wallets-api-staging-948987300951.us-east4.run.app",
      "description": "Staging"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthTokenRequest": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Your Mufi API username.",
            "type": "string"
          },
          "password": {
            "description": "Your Mufi API password.",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "JWT": {
        "type": "string"
      },
      "AuthTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "description": "Access token to use the API (expires every hour).",
            "$ref": "#/components/schemas/JWT"
          },
          "refreshToken": {
            "description": "Token to refresh your access token.",
            "$ref": "#/components/schemas/JWT"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "description": "Refresh token to get a new access token.",
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "VersionResponse": {
        "type": "object",
        "properties": {
          "version": {
            "description": "Version number.",
            "type": "string"
          }
        },
        "required": [
          "version"
        ]
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "WalletType": {
        "type": "string",
        "enum": [
          "Polkadot"
        ]
      },
      "WalletAddress": {
        "type": "string",
        "minLength": 25,
        "maxLength": 128
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WalletType"
          },
          "address": {
            "$ref": "#/components/schemas/WalletAddress"
          }
        },
        "required": [
          "type",
          "address"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the user."
          },
          "email": {
            "type": "string",
            "description": "The email of the user.",
            "format": "email"
          },
          "wallets": {
            "type": "array",
            "description": "The wallet addresses of the user.",
            "items": {
              "$ref": "#/components/schemas/Wallet"
            }
          }
        },
        "required": [
          "id",
          "email",
          "wallets"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message describing the error"
          }
        },
        "required": [
          "message"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/auth/token": {
      "post": {
        "description": "Get JWTs access and refresh tokens to authenticate with the API",
        "requestBody": {
          "description": "Username and password to get new JWTs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an `accessToken` and a `refreshToken`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid JWT token"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get new JWT token using a refresh token.",
        "requestBody": {
          "description": "Refresh token to get new JWTs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a new `accessToken` and a `refreshToken`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid JWT token"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Not Found"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get the current stable wallet API version",
        "responses": {
          "200": {
            "description": "The current version of the API",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                },
                "example": {
                  "version": "0.3.0"
                }
              }
            }
          },
          "401": {
            "description": "Invalid JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid JWT token"
                }
              }
            }
          }
        }
      }
    },
    "/user/wallets": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create a wallet or fetch an existing wallet with the given email",
        "requestBody": {
          "description": "A user email.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A user and wallets.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "201": {
            "description": "A user was added as a customer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid email format"
                }
              }
            }
          },
          "401": {
            "description": "Invalid JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Invalid JWT token"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "message": "Access denied"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {}
}